% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dispatch.R
\docType{class}
\name{LogDispatch}
\alias{LogDispatch}
\title{LogDispatch}
\description{
R6 Class that dispatches log messages throughout the application.
}
\details{
This object is designed to a centralized logging dispatcher that
renders log messages with the appropriate context of the calling
object. The \code{log_layout} object is used to generate log message
layouts (render formats), which are used by the \code{LogDispatcher}
to render highly-customizable and detailed log messages.
}
\section{Metrics}{


System Context

\itemize{
\item{"sysname"} : {The operating system name.}
\item{"release"} : {The OS release.}
\item{"version"} : {The OS version.}
\item{"nodename"} : {A name by which the machine is known on the network (if any).}
\item{"machine"} : {A concise description of the hardware, often the CPU type.}
\item{"login"} : {The user's login name, or "unknown" if it cannot be ascertained.}
\item{"user"} : {The name of the real user ID, or "unknown" if it cannot be ascertained.}
\item{"r-ver"} : {R Version (major).(minor)}
}
}

\seealso{
LogLevel

Other Logging: 
\code{\link{set_log_configuration}()}
}
\concept{Logging}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{LogDispatch$new()}}
\item \href{#method-get_system_context}{\code{LogDispatch$get_system_context()}}
\item \href{#method-add_log_level}{\code{LogDispatch$add_log_level()}}
\item \href{#method-get_settings}{\code{LogDispatch$get_settings()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of a log config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogDispatch$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new \code{LogLayout} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_system_context"></a>}}
\if{latex}{\out{\hypertarget{method-get_system_context}{}}}
\subsection{Method \code{get_system_context()}}{
Public wrapper around system context used
when evaluating log layouts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogDispatch$get_system_context()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
system context for logging metrics.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_log_level"></a>}}
\if{latex}{\out{\hypertarget{method-add_log_level}{}}}
\subsection{Method \code{add_log_level()}}{
Adds dynamic function as a short-cut to
log a message with a configured level.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogDispatch$add_log_level(level)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{level}}{log level}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
reference to self to support chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_settings"></a>}}
\if{latex}{\out{\hypertarget{method-get_settings}{}}}
\subsection{Method \code{get_settings()}}{
Public wrapper around logger settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogDispatch$get_settings()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
logger settings.
}
}
}
