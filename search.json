[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Brandon Moretz Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brandon Moretz. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moretz B (2021). dyn.log: Dynamic Logging R Inspired Configuration Driven Development. R package version 0.1.3, https://github.com/bmoretz/dyn.log.","code":"@Manual{,   title = {dyn.log: Dynamic Logging for R Inspired by Configuration Driven Development},   author = {Brandon Moretz},   year = {2021},   note = {R package version 0.1.3},   url = {https://github.com/bmoretz/dyn.log}, }"},{"path":"/index.html","id":"dynlog","dir":"","previous_headings":"","what":"Dynamic Logging for R Inspired by Configuration Driven Development","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"goal dyn.log comprehensive dynamic configuration driven logging package R. several excellent logging solutions already R ecosystem, always feel constrained way . Every project designed differently achieve stated goal; solve problem, ultimately utility logging solution ability adapt project’s design. rai·​son d’être dyn.log; provide modular design, template mechanics configuration-based integration model. enableds logger integrate deeply design, even though knows nothing .","code":""},{"path":[]},{"path":"/index.html","id":"github","dir":"","previous_headings":"Installation","what":"GitHub","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"can install development version dyn.log GitHub :","code":"remotes::install_github(\"bmoretz/dyn.log\")"},{"path":"/index.html","id":"cran","dir":"","previous_headings":"Installation","what":"CRAN","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"can install latest stable version dyn.log CRAN: (coming soon)","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"Installation","what":"Overview","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"","code":"library(dyn.log)"},{"path":"/index.html","id":"configuration","dir":"","previous_headings":"Installation > Overview","what":"Configuration","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"Everything dyn.log configuration driven, package comes basic configuration default.yaml, show entirety broken sections follow:","code":"settings:   threshold: TRACE   max_callstack: 5 levels: - name: TRACE   description: This level designates finer-grained informational events than the DEBUG.   severity: !expr 600L   log_style: !expr crayon::make_style(\"antiquewhite3\")$bold   msg_style: !expr crayon::make_style('gray60') - name: DEBUG   description: This level designates fine-grained informational events that are most useful to debug an application.   severity: !expr 500L   log_style: !expr crayon::make_style('deepskyblue2')$bold   msg_style: !expr crayon::make_style('gray90') - name: INFO   description: This level designates informational messages that highlight the progress of the application at coarse-grained level.   severity: !expr 400L   log_style: !expr crayon::make_style('dodgerblue4')$bold   msg_style: !expr crayon::make_style('gray100') - name: SUCCESS   description: This level designates that the operation was unencumbered.   severity: !expr 300L   log_style: !expr crayon::make_style('chartreuse')$bold   msg_style: !expr crayon::bgGreen$bold$black - name: WARN   description: This level designates potentially harmful situations.   severity: !expr 350L   log_style: !expr crayon::make_style('darkorange')$bold   msg_style: !expr crayon::bgYellow$bold$black - name: ERROR   description: This level designates error events that might still allow the application to continue running.   severity: !expr 200L   log_style: !expr crayon::make_style('firebrick1')$bold   msg_style: !expr crayon::bgBlack$bold$white - name: FATAL   description: This level designates very severe error events that will presumably lead the application to abort.   severity: !expr 100L   log_style: !expr crayon::make_style('firebrick')$bold   msg_style: !expr crayon::bgRed$bold$white layouts: - association: default   seperator: !expr as.character(' ')   new_line: !expr as.character('\\n')   formats: new_fmt_log_level(),            new_fmt_timestamp(crayon::silver$italic),            new_fmt_log_msg() - association: level_msg   seperator: !expr as.character(' ')   new_line: !expr as.character('\\n')   formats: new_fmt_log_level(),            new_fmt_log_msg()"},{"path":"/index.html","id":"settings","dir":"","previous_headings":"Installation > Overview","what":"Settings","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"settings node contains core settings log dispatcher, attribute. covered detail LogDispatch section manual. ?LogDispatch fairly intuitive.","code":""},{"path":"/index.html","id":"levels","dir":"","previous_headings":"Installation > Overview","what":"Levels","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"levels node contains log levels want available environment. log level defined configuration, automatically becomes accessible via first-class function dispatcher, e.g.: levels specified via config can found calling log_levels: can get detailed information particular log level via level_info(): ’ll notice level level message style attributes crayon styles. level unique render format helps visually assist parsing log information. see sample format loaded log levels, call display_log_levels: default logging configuration closely resembles fairly ubiquitous log4j scheme.","code":"Logger$info(\"call info level like this\") #> INFO [12/24/21 18:53:19 -0500] call info level like this all_levels <- log_levels()  names(all_levels) #> [1] \"trace\"   \"debug\"   \"info\"    \"success\" \"warn\"    \"error\"   \"fatal\" level_info(log_levels(\"warn\")) #> $name #> [1] \"WARN\" #>  #> $description #> [1] \"This level designates potentially harmful situations.\" #>  #> $severity #> [1] 350 #>  #> $style #> $style$level #> Crayon style function, darkorange, bold: example output. #>  #> $style$message #> Crayon style function, bgYellow, bold, black: example output. #>  #> $style$example #> WARN - This level designates potentially harmful situations. display_log_levels() #>  #> TRACE This level designates finer-grained informational events than the DEBUG. #>  #> DEBUG This level designates fine-grained informational events that are most useful to debug an application. #>  #> INFO This level designates informational messages that highlight the progress of the application at coarse-grained level. #>  #> SUCCESS This level designates that the operation was unencumbered. #>  #> WARN This level designates potentially harmful situations. #>  #> ERROR This level designates error events that might still allow the application to continue running. #>  #> FATAL This level designates very severe error events that will presumably lead the application to abort."},{"path":"/index.html","id":"layouts","dir":"","previous_headings":"Installation > Overview","what":"Layouts","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"Every log message needs format dispatcher knows render log call. Formats defined yaml config comes basic ones pre-configured. default log layout standard format: {LEVEL} - {TIMESTAMP} - {MSG}, space separator format objects new line feed “”. view details log layout, can call log_layout_detail: detailed look objects, work please see “Log Layouts” vignette.","code":"detail <- log_layout_detail(log_layouts(\"default\"))  names(detail) #> [1] \"formats\"   \"types\"     \"seperator\" \"new_line\""},{"path":"/index.html","id":"logging","dir":"","previous_headings":"Installation","what":"Logging","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"logging functionality exposed R6 class, LogDispatch, available package namespace variable called Logger. Logger methods correspond log levels defined yaml configuration, makes logging intuitive. package loaded, logger appear top / global environment Logger. Log messages automatically assumed standard glue format local environment variables capturable log output.","code":""},{"path":"/index.html","id":"simple-example","dir":"","previous_headings":"Installation > Logging","what":"Simple Example","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"“box” (OTB) configuration specifies default vanilla log format displays level logged, current time-stamp (default TS format), log message:","code":"var1 <- \"abc\"; var2 <- 123; var3 <- runif(1)  Logger$debug(\"my log message - var1: {var1}, var2: {var2}, var3: {var3}\") #> DEBUG [12/24/21 18:53:19 -0500] my log message - var1: abc, var2: 123, var3: 0.969351699110121"},{"path":"/index.html","id":"customizing-a-log-message","dir":"","previous_headings":"Installation","what":"Customizing a Log Message","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"Log message layouts exposed S3 type package called log_layout. Layouts composed series objects inherit fmt_layout. detailed look objects, work please see “Log Layouts” vignette. (vignette(“Log Layouts”, package = “dyn.log”)","code":"new_log_layout(   format = list(     new_fmt_metric(crayon::green$bold, \"sysname\"),     new_fmt_metric(crayon::red$bold, \"release\"),     new_fmt_line_break(),     new_fmt_log_level(),     new_fmt_timestamp(crayon::silver$italic),     new_fmt_log_msg()   ),   seperator = '-',   association = \"custom\" )  Logger$info(\"my log message - var1: {var1}, var2: {var2}, var3: {var3}\", layout = \"custom\") #> Linux-5.10.16.3-microsoft-standard-WSL2 #> INFO-[12/24/21 18:53:19 -0500]-my log message - var1: abc, var2: 123, var3: 0.969351699110121"},{"path":"/index.html","id":"logging-associations","dir":"","previous_headings":"Installation","what":"Logging Associations","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"One thing may noticed previous log layout definition association parameter. Associations useful way build customized log layout custom R6 types. can especially useful larger applications, plumber services shiny dashboards. TestObject defined , ’s primary responsibly assign randomly generated identifier instance via constructor. also method object call logger local scope variables logged well. class defined, can create custom log layout associated R6 type new log layout: can see, logger invoked inside class custom layout associated custom layout get used. follow-log call (outside class scope) reverts back standard layout settings. detailed look class associations, work please see “Log Layouts” vignette. (vignette(“Log Layouts”, package = “dyn.log”)","code":"TestObject <- R6::R6Class(   classname = \"TestObject\",    public = list(     id = NULL,      initialize = function() {       self$id <- private$generate_id()     },      test_method = function() {       a <- \"test\"; b <- 123; c <- runif(1)        Logger$info(\"these are some variables: {a} - {b} - {c}\")     }   ),    private = list(     generate_id = function(n = 15) {       paste0(sample(LETTERS, n, TRUE), collapse =  '')     }   ) )  obj <- TestObject$new() obj #> <TestObject> #>   Public: #>     clone: function (deep = FALSE)  #>     id: ZLMHCODWNBYFSCL #>     initialize: function ()  #>     test_method: function ()  #>   Private: #>     generate_id: function (n = 15) new_log_layout(   format = list(     new_fmt_literal(crayon::cyan$bold, \"Object Id:\"),     new_fmt_cls_field(crayon::bgCyan$silver$bold, \"id\"),     new_fmt_line_break(),     new_fmt_log_level(),     new_fmt_timestamp(crayon::silver$italic),     new_fmt_log_msg(),     new_fmt_line_break(),     new_fmt_metric(crayon::green$bold, \"sysname\"),     new_fmt_metric(crayon::red$bold, \"nodename\"),     new_fmt_literal(crayon::blue$bold, \"R Version:\"),     new_fmt_metric(crayon::blue$italic$bold, \"r_ver\"),     new_fmt_line_break()   ),   association = \"TestObject\" )  # notice above, \"Logger$info\" is called inside the context of the Test Object, # and the variables are scoped to inside the function. obj$test_method() #> Object Id: ZLMHCODWNBYFSCL #> INFO [12/24/21 18:53:19 -0500] these are some variables: test - 123 - 0.889726632041857 #> Linux WORKSTATION R Version: 4.1.2 Logger$debug(\"this is a normal log msg\") #> DEBUG [12/24/21 18:53:19 -0500] this is a normal log msg"},{"path":"/index.html","id":"notes--thanks","dir":"","previous_headings":"Installation","what":"Notes & Thanks","title":"Dynamic Logging for R Inspired by Configuration Driven Development","text":"pretty logger output document made possible excellent fansi package Brody Gaslam.","code":""},{"path":"/reference/LogDispatch.html","id":null,"dir":"Reference","previous_headings":"","what":"LogDispatch — LogDispatch","title":"LogDispatch — LogDispatch","text":"R6 Class dispatches log messages throughout application.","code":""},{"path":"/reference/LogDispatch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LogDispatch — LogDispatch","text":"object designed centralized logging dispatcher renders log messages appropriate context calling object. log_layout object used generate log message layouts (render formats), used LogDispatcher render highly-customizable detailed log messages.","code":""},{"path":"/reference/LogDispatch.html","id":"metrics","dir":"Reference","previous_headings":"","what":"Metrics","title":"LogDispatch — LogDispatch","text":"System Context \"sysname\" : operating system name. \"release\" : OS release. \"version\" : OS version. \"nodename\" : name machine known network (). \"machine\" : concise description hardware, often CPU type. \"login\" : user's login name, \"unknown\" ascertained. \"user\" : name real user ID, \"unknown\" ascertained. \"r-ver\" : R Version (major).(minor)","code":""},{"path":[]},{"path":[]},{"path":"/reference/LogDispatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"LogDispatch — LogDispatch","text":"LogDispatch$new() LogDispatch$get_system_context() LogDispatch$add_log_level() LogDispatch$get_settings()","code":""},{"path":"/reference/LogDispatch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"LogDispatch — LogDispatch","text":"Creates new instance log config.","code":""},{"path":"/reference/LogDispatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LogDispatch — LogDispatch","text":"","code":"LogDispatch$new()"},{"path":"/reference/LogDispatch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"LogDispatch — LogDispatch","text":"new LogLayout object.","code":""},{"path":"/reference/LogDispatch.html","id":"method-get-system-context-","dir":"Reference","previous_headings":"","what":"Method get_system_context()","title":"LogDispatch — LogDispatch","text":"Public wrapper around system context used evaluating log layouts.","code":""},{"path":"/reference/LogDispatch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"LogDispatch — LogDispatch","text":"","code":"LogDispatch$get_system_context()"},{"path":"/reference/LogDispatch.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"LogDispatch — LogDispatch","text":"system context logging metrics.","code":""},{"path":"/reference/LogDispatch.html","id":"method-add-log-level-","dir":"Reference","previous_headings":"","what":"Method add_log_level()","title":"LogDispatch — LogDispatch","text":"Adds dynamic function short-cut log message configured level.","code":""},{"path":"/reference/LogDispatch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"LogDispatch — LogDispatch","text":"","code":"LogDispatch$add_log_level(level)"},{"path":"/reference/LogDispatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogDispatch — LogDispatch","text":"level log level","code":""},{"path":"/reference/LogDispatch.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"LogDispatch — LogDispatch","text":"reference self support chaining.","code":""},{"path":"/reference/LogDispatch.html","id":"method-get-settings-","dir":"Reference","previous_headings":"","what":"Method get_settings()","title":"LogDispatch — LogDispatch","text":"Public wrapper around logger settings.","code":""},{"path":"/reference/LogDispatch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"LogDispatch — LogDispatch","text":"","code":"LogDispatch$get_settings()"},{"path":"/reference/LogDispatch.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"LogDispatch — LogDispatch","text":"logger settings.","code":""},{"path":"/reference/Logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Logger — Logger","title":"Global Logger — Logger","text":"Global Logger","code":""},{"path":"/reference/Logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Logger — Logger","text":"","code":"Logger"},{"path":"/reference/Logger.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global Logger — Logger","text":"object class LogDispatch (inherits R6) length 15.","code":""},{"path":"/reference/as.character.log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Log Level Name — as.character.log_level","title":"Get Log Level Name — as.character.log_level","text":"gets name log level though casting character forwarding call get_level_name.","code":""},{"path":"/reference/as.character.log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Log Level Name — as.character.log_level","text":"","code":"# S3 method for log_level as.character(x, ...)"},{"path":"/reference/as.character.log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Log Level Name — as.character.log_level","text":"x log level ... ignored","code":""},{"path":"/reference/as.character.log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Log Level Name — as.character.log_level","text":"log level name","code":""},{"path":"/reference/as.integer.log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the severity of a log level. — as.integer.log_level","title":"Gets the severity of a log level. — as.integer.log_level","text":"Gets severity log level.","code":""},{"path":"/reference/as.integer.log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the severity of a log level. — as.integer.log_level","text":"","code":"# S3 method for log_level as.integer(x, ...)"},{"path":"/reference/as.integer.log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the severity of a log level. — as.integer.log_level","text":"x log level ... ignored","code":""},{"path":"/reference/as.integer.log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the severity of a log level. — as.integer.log_level","text":"log level","code":""},{"path":"/reference/attach_log_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Log Levels — attach_log_levels","title":"Load Log Levels — attach_log_levels","text":"Parses loads levels specified logging configuration registers dispatcher via log_levels active binding.","code":""},{"path":"/reference/attach_log_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Log Levels — attach_log_levels","text":"","code":"attach_log_levels(levels)"},{"path":"/reference/attach_log_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Log Levels — attach_log_levels","text":"levels defined configuration","code":""},{"path":[]},{"path":"/reference/display_log_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Log Levels — display_log_levels","title":"Display Log Levels — display_log_levels","text":"utility function dynamically displays configured log levels (loaded config), outputs simple layout log level msg formatted crayon styles.","code":""},{"path":"/reference/display_log_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Log Levels — display_log_levels","text":"","code":"display_log_levels()"},{"path":"/reference/display_log_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Log Levels — display_log_levels","text":"Nothing.","code":""},{"path":[]},{"path":"/reference/dot-onLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization\n\nPackage initialization routine. — .onLoad","title":"Initialization\n\nPackage initialization routine. — .onLoad","text":"Initialization Package initialization routine.","code":""},{"path":"/reference/dot-onLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization\n\nPackage initialization routine. — .onLoad","text":"","code":".onLoad(libname, pkgname)"},{"path":"/reference/dot-onLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization\n\nPackage initialization routine. — .onLoad","text":"libname library name pkgname package name","code":""},{"path":"/reference/evaluate_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"A container for a set of formatters that specify the log\nentry layout. — evaluate_layout","title":"A container for a set of formatters that specify the log\nentry layout. — evaluate_layout","text":"container set formatters specify log entry layout.","code":""},{"path":"/reference/evaluate_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A container for a set of formatters that specify the log\nentry layout. — evaluate_layout","text":"","code":"evaluate_layout(formats, types, seperator, context, new_line = \"\\n\")"},{"path":"/reference/evaluate_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A container for a set of formatters that specify the log\nentry layout. — evaluate_layout","text":"formats layout formats needed evaluation. types distinct list format types layout. seperator layout separator inserted entries. context list contexts needed evaluate formats layout. new_line layout separator inserted lines.","code":""},{"path":"/reference/evaluate_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A container for a set of formatters that specify the log\nentry layout. — evaluate_layout","text":"evaluated log layout","code":""},{"path":[]},{"path":"/reference/extract_func_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Function Name — extract_func_name","title":"Extract Function Name — extract_func_name","text":"Extracts name function deparse call.","code":""},{"path":"/reference/extract_func_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Function Name — extract_func_name","text":"","code":"extract_func_name(func)"},{"path":"/reference/extract_func_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Function Name — extract_func_name","text":"func function name","code":""},{"path":"/reference/extract_func_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Function Name — extract_func_name","text":"function name without arguments","code":""},{"path":"/reference/format.fmt_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the format of a format object. — format.fmt_timestamp","title":"Gets the format of a format object. — format.fmt_timestamp","text":"Gets format format object.","code":""},{"path":"/reference/format.fmt_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the format of a format object. — format.fmt_timestamp","text":"","code":"# S3 method for fmt_timestamp format(x, ...)"},{"path":"/reference/format.fmt_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the format of a format object. — format.fmt_timestamp","text":"x object extract value . ... arguments passed methods.","code":""},{"path":"/reference/format.fmt_timestamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the format of a format object. — format.fmt_timestamp","text":"object's value","code":""},{"path":"/reference/format.log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Level Format — format.log_level","title":"Log Level Format — format.log_level","text":"formats message style log level.","code":""},{"path":"/reference/format.log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Level Format — format.log_level","text":"","code":"# S3 method for log_level format(x, message = character(0), ...)"},{"path":"/reference/format.log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Level Format — format.log_level","text":"x log level message message format ... arguments passed methods.","code":""},{"path":"/reference/format.log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Level Format — format.log_level","text":"styled level information","code":""},{"path":"/reference/format.log_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Level Format — format.log_level","text":"","code":"if (FALSE) { level_info(LEVEL) }"},{"path":"/reference/get_call_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Call Stack — get_call_stack","title":"Formatted Call Stack — get_call_stack","text":"Placeholder formatted call stack log layout.","code":""},{"path":"/reference/get_call_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Call Stack — get_call_stack","text":"","code":"get_call_stack(keep_args = F)"},{"path":"/reference/get_call_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted Call Stack — get_call_stack","text":"keep_args boolean indicate wante keep call arguments .","code":""},{"path":"/reference/get_call_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Call Stack — get_call_stack","text":"formatted call stack","code":""},{"path":[]},{"path":"/reference/get_r_version.html","id":null,"dir":"Reference","previous_headings":"","what":"R Version — get_r_version","title":"R Version — get_r_version","text":"Wrapper around R.Version() produce nicely formatted string use use sys_context.","code":""},{"path":"/reference/get_r_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R Version — get_r_version","text":"","code":"get_r_version()"},{"path":"/reference/get_r_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R Version — get_r_version","text":"R environment version (major).(minor) format","code":""},{"path":"/reference/get_system_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get System Info — get_system_info","title":"Get System Info — get_system_info","text":"Wrapper around Sys.info() provides values named list format.","code":""},{"path":"/reference/get_system_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get System Info — get_system_info","text":"","code":"get_system_info()"},{"path":"/reference/get_system_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get System Info — get_system_info","text":"Sys.info() named list","code":""},{"path":"/reference/length.log_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Layout Length — length.log_layout","title":"Log Layout Length — length.log_layout","text":"Generic override length log layout returns number individual format objects layout.","code":""},{"path":"/reference/length.log_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Layout Length — length.log_layout","text":"","code":"# S3 method for log_layout length(x, ...)"},{"path":"/reference/length.log_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Layout Length — length.log_layout","text":"x log format ... arguments passed methods.","code":""},{"path":"/reference/length.log_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Layout Length — length.log_layout","text":"number formats layout.","code":""},{"path":"/reference/level_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Level Description — level_description","title":"Log Level Description — level_description","text":"Gets description log level. Gets description log level.","code":""},{"path":"/reference/level_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Level Description — level_description","text":"","code":"level_description(level)  level_description(level)"},{"path":"/reference/level_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Level Description — level_description","text":"level log level","code":""},{"path":"/reference/level_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Level Description — level_description","text":"level description level severity","code":""},{"path":"/reference/level_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Level Description — level_description","text":"","code":"if (FALSE) { level_description(LEVEL) } if (FALSE) { level_description(LEVEL) }"},{"path":"/reference/level_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Level Information — level_info","title":"Log Level Information — level_info","text":"Gets log level information.","code":""},{"path":"/reference/level_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Level Information — level_info","text":"","code":"level_info(level)"},{"path":"/reference/level_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Level Information — level_info","text":"level log level","code":""},{"path":"/reference/level_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Level Information — level_info","text":"log level information","code":""},{"path":"/reference/level_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Level Information — level_info","text":"","code":"if (FALSE) { level_info(LEVEL) }"},{"path":"/reference/level_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Level Name — level_name","title":"Get Level Name — level_name","text":"gets name log level.","code":""},{"path":"/reference/level_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Level Name — level_name","text":"","code":"level_name(level)"},{"path":"/reference/level_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Level Name — level_name","text":"level log level","code":""},{"path":"/reference/level_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Level Name — level_name","text":"log level name","code":""},{"path":"/reference/level_severity.html","id":null,"dir":"Reference","previous_headings":"","what":"get level severity — level_severity","title":"get level severity — level_severity","text":"Gets severity log level.","code":""},{"path":"/reference/level_severity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get level severity — level_severity","text":"","code":"level_severity(level)  level_severity(level)"},{"path":"/reference/level_severity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get level severity — level_severity","text":"level log level","code":""},{"path":"/reference/level_severity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get level severity — level_severity","text":"level severity level severity","code":""},{"path":"/reference/level_severity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get level severity — level_severity","text":"","code":"if (FALSE) { level_severity(LEVEL) } if (FALSE) { level_severity(LEVEL) }"},{"path":"/reference/load_log_layouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Log Layouts — load_log_layouts","title":"Load Log Layouts — load_log_layouts","text":"Parses loads layouts specified logging configuration registers log dispatcher via log_layouts active binding.","code":""},{"path":"/reference/load_log_layouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Log Layouts — load_log_layouts","text":"","code":"load_log_layouts(layouts)"},{"path":"/reference/load_log_layouts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Log Layouts — load_log_layouts","text":"layouts defined configuration","code":""},{"path":[]},{"path":"/reference/log_layout_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Layout Detail — log_layout_detail","title":"Log Layout Detail — log_layout_detail","text":"Gets layout formats distinct format types log layout instance, useful determining appropriate amount log context construct.","code":""},{"path":"/reference/log_layout_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Layout Detail — log_layout_detail","text":"","code":"log_layout_detail(layout)"},{"path":"/reference/log_layout_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Layout Detail — log_layout_detail","text":"layout object extract layout detail .","code":""},{"path":"/reference/log_layout_detail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Layout Detail — log_layout_detail","text":"layout format","code":""},{"path":"/reference/log_layouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Layouts — log_layouts","title":"Log Layouts — log_layouts","text":"active binding keep track log layouts created new_log_layout.","code":""},{"path":"/reference/log_layouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Layouts — log_layouts","text":"","code":"log_layouts(association = character(0), layout = NULL)"},{"path":"/reference/log_layouts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Layouts — log_layouts","text":"association named association layout layout log layout add already existing.","code":""},{"path":"/reference/log_layouts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Layouts — log_layouts","text":"defined log layouts","code":""},{"path":"/reference/log_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Levels — log_levels","title":"Log Levels — log_levels","text":"active binding keep track log levels created new_log_level.","code":""},{"path":"/reference/log_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Levels — log_levels","text":"","code":"log_levels(name = character(0), level = NULL)"},{"path":"/reference/log_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Levels — log_levels","text":"name name associated log level level log level add already existing.","code":""},{"path":"/reference/log_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Levels — log_levels","text":"defined log levels","code":""},{"path":"/reference/new_fmt_cls_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted field from the calling class scope. — new_fmt_cls_field","title":"Formatted field from the calling class scope. — new_fmt_cls_field","text":"Placeholder container class field","code":""},{"path":"/reference/new_fmt_cls_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted field from the calling class scope. — new_fmt_cls_field","text":"","code":"new_fmt_cls_field(style, field)"},{"path":"/reference/new_fmt_cls_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted field from the calling class scope. — new_fmt_cls_field","text":"style crayon::style() field field object display","code":""},{"path":"/reference/new_fmt_cls_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted field from the calling class scope. — new_fmt_cls_field","text":"new_fmt_cls_field","code":""},{"path":[]},{"path":"/reference/new_fmt_exec_scope.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted variable from the execution scope. — new_fmt_exec_scope","title":"Formatted variable from the execution scope. — new_fmt_exec_scope","text":"Placeholder execution scope variable.","code":""},{"path":"/reference/new_fmt_exec_scope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted variable from the execution scope. — new_fmt_exec_scope","text":"","code":"new_fmt_exec_scope(style, field)"},{"path":"/reference/new_fmt_exec_scope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted variable from the execution scope. — new_fmt_exec_scope","text":"style crayon::style() field execution scope field","code":""},{"path":"/reference/new_fmt_exec_scope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted variable from the execution scope. — new_fmt_exec_scope","text":"new_fmt_cls_field","code":""},{"path":[]},{"path":"/reference/new_fmt_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Layout — new_fmt_layout","title":"Format Layout — new_fmt_layout","text":"Base type log format objects.","code":""},{"path":"/reference/new_fmt_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Layout — new_fmt_layout","text":"","code":"new_fmt_layout(style)"},{"path":"/reference/new_fmt_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Layout — new_fmt_layout","text":"style crayon layout use log generation.","code":""},{"path":"/reference/new_fmt_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Layout — new_fmt_layout","text":"new log format","code":""},{"path":[]},{"path":"/reference/new_fmt_line_break.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Line Break — new_fmt_line_break","title":"Formatted Line Break — new_fmt_line_break","text":"Placeholder new line log layout.","code":""},{"path":"/reference/new_fmt_line_break.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Line Break — new_fmt_line_break","text":"","code":"new_fmt_line_break()"},{"path":"/reference/new_fmt_line_break.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Line Break — new_fmt_line_break","text":"log layout newline.","code":""},{"path":[]},{"path":"/reference/new_fmt_literal.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Literal — new_fmt_literal","title":"Formatted Literal — new_fmt_literal","text":"Placeholder formatted literal log layout.","code":""},{"path":"/reference/new_fmt_literal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Literal — new_fmt_literal","text":"","code":"new_fmt_literal(style, literal)"},{"path":"/reference/new_fmt_literal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted Literal — new_fmt_literal","text":"style format style (crayon) literal log value","code":""},{"path":"/reference/new_fmt_literal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Literal — new_fmt_literal","text":"log metric layout.","code":""},{"path":[]},{"path":"/reference/new_fmt_literal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatted Literal — new_fmt_literal","text":"","code":"if (FALSE) { new_fmt_literal(red $ bold, \"literal text\")  new_fmt_literal(blue $ italic, \"literal text\") }"},{"path":"/reference/new_fmt_log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Log Level — new_fmt_log_level","title":"Formatted Log Level — new_fmt_log_level","text":"Placeholder formatted log level log layout.","code":""},{"path":"/reference/new_fmt_log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Log Level — new_fmt_log_level","text":"","code":"new_fmt_log_level()"},{"path":"/reference/new_fmt_log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Log Level — new_fmt_log_level","text":"log level info.","code":""},{"path":[]},{"path":"/reference/new_fmt_log_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Messaged, based on log level — new_fmt_log_msg","title":"Formatted Messaged, based on log level — new_fmt_log_msg","text":"Placeholder log msg log layout.","code":""},{"path":"/reference/new_fmt_log_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Messaged, based on log level — new_fmt_log_msg","text":"","code":"new_fmt_log_msg()"},{"path":"/reference/new_fmt_log_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Messaged, based on log level — new_fmt_log_msg","text":"log layout newline.","code":""},{"path":[]},{"path":"/reference/new_fmt_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Metric — new_fmt_metric","title":"Formatted Metric — new_fmt_metric","text":"Inserts formatted log metric.","code":""},{"path":"/reference/new_fmt_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Metric — new_fmt_metric","text":"","code":"new_fmt_metric(style, metric)"},{"path":"/reference/new_fmt_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted Metric — new_fmt_metric","text":"style layout use log generation metric metric log.","code":""},{"path":"/reference/new_fmt_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Metric — new_fmt_metric","text":"new formatted metric","code":""},{"path":[]},{"path":"/reference/new_fmt_metric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatted Metric — new_fmt_metric","text":"","code":"if (FALSE) { new_fmt_metric(bold $ green, \"sysname\")  new_fmt_metric(bold $ red, \"release\") }"},{"path":"/reference/new_fmt_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Timestamp — new_fmt_timestamp","title":"Formatted Timestamp — new_fmt_timestamp","text":"Placeholder formatted timestamp log layout.","code":""},{"path":"/reference/new_fmt_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Timestamp — new_fmt_timestamp","text":"","code":"new_fmt_timestamp(style, format = \"[%x %H:%M:%S %z]\")"},{"path":"/reference/new_fmt_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted Timestamp — new_fmt_timestamp","text":"style format style (crayon) format timestamp format, defaults : %x %H:%M:%S %z, e.g., 12/04/21 14:31:25 -0500","code":""},{"path":"/reference/new_fmt_timestamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Timestamp — new_fmt_timestamp","text":"log metric layout.","code":""},{"path":[]},{"path":"/reference/new_fmt_timestamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatted Timestamp — new_fmt_timestamp","text":"","code":"if (FALSE) { fmt_timestamp(red $ bold, \"%Y-%m-%d %H:%M:%S\")  fmt_timestamp(blue $ italic, \"%x %H:%M:%S %z\") }"},{"path":"/reference/new_log_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Layout — new_log_layout","title":"Log Layout — new_log_layout","text":"class stores collection log format objects understands associate given format class objects.","code":""},{"path":"/reference/new_log_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Layout — new_log_layout","text":"","code":"new_log_layout(   format = list(),   seperator = \" \",   new_line = \"\\n\",   association = character() )"},{"path":"/reference/new_log_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Layout — new_log_layout","text":"format collection format objects initialize . seperator format entry separator, defaults single space. new_line layout separator inserted lines. association objects associate log format .","code":""},{"path":"/reference/new_log_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Layout — new_log_layout","text":"object's value","code":""},{"path":[]},{"path":"/reference/new_log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Level — new_log_level","title":"Log Level — new_log_level","text":"S3 object represent typed & predefined log level.","code":""},{"path":"/reference/new_log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Level — new_log_level","text":"","code":"new_log_level(name, description, severity, log_style = NULL, msg_style = NULL)"},{"path":"/reference/new_log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Level — new_log_level","text":"name name log level string representation. description description log level & limited info appropriate usage. severity log severity used determining message get displayed according currently set evaluation threshold. log_style crayon::style() colorize log level. msg_style crayon::style() style gray scale log message, typically inverted strength, according severity.","code":""},{"path":"/reference/new_log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Level — new_log_level","text":"log_level","code":""},{"path":"/reference/new_log_level.html","id":"severity","dir":"Reference","previous_headings":"","what":"Severity","title":"Log Level — new_log_level","text":"default logging configuration comes levels preconfigured, documented intent outlined. match needs, can easily customize entirely based needs. Please see log levels vignette. \"FATAL\" : FATAL level designates severe error events presumably lead application abort. \"ERROR\" : ERROR level designates error events might still allow application continue running. \"WARN\" : WARN level designates potentially harmful situations. \"SUCCESS\" : SUCCESS level designates operation unencumbered. \"INFO\" : INFO level designates informational messages highlight progress application coarse-grained level. \"DEBUG\" : DEBUG Level designates fine-grained informational events useful debug application. \"TRACE\" : TRACE Level designates finer-grained informational events DEBUG","code":""},{"path":"/reference/set_log_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Logging Configuration — set_log_configuration","title":"Set Logging Configuration — set_log_configuration","text":"loads logging configuration yaml config file loads appropriate objects specified environment.","code":""},{"path":"/reference/set_log_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Logging Configuration — set_log_configuration","text":"","code":"set_log_configuration(file_name, envir = parent.frame())"},{"path":"/reference/set_log_configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Logging Configuration — set_log_configuration","text":"file_name loads logging levels yml configuration file. envir environment load logger .","code":""},{"path":"/reference/set_log_configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Logging Configuration — set_log_configuration","text":"initialized log levels specified config.","code":""},{"path":[]},{"path":"/reference/style.fmt_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Style — style.fmt_layout","title":"Style — style.fmt_layout","text":"Gets style format object.","code":""},{"path":"/reference/style.fmt_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style — style.fmt_layout","text":"","code":"# S3 method for fmt_layout style(obj, ...)"},{"path":"/reference/style.fmt_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style — style.fmt_layout","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/style.fmt_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style — style.fmt_layout","text":"object's value","code":""},{"path":"/reference/style.html","id":null,"dir":"Reference","previous_headings":"","what":"Style — style","title":"Style — style","text":"Generic style method used overriding get style information various logging objects.","code":""},{"path":"/reference/style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style — style","text":"","code":"style(obj)"},{"path":"/reference/style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style — style","text":"obj object extract value .","code":""},{"path":"/reference/style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style — style","text":"object's value","code":""},{"path":"/reference/style.log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Level Style — style.log_level","title":"Get Level Style — style.log_level","text":"gets style log level.","code":""},{"path":"/reference/style.log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Level Style — style.log_level","text":"","code":"# S3 method for log_level style(obj, ...)"},{"path":"/reference/style.log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Level Style — style.log_level","text":"obj log level ... arguments passed methods.","code":""},{"path":"/reference/style.log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Level Style — style.log_level","text":"log level name","code":""},{"path":"/reference/sys_context.html","id":null,"dir":"Reference","previous_headings":"","what":"System Context — sys_context","title":"System Context — sys_context","text":"Wrapper around Sys.info() get_r_version provides consolidated list variables used logging contexts.","code":""},{"path":"/reference/sys_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"System Context — sys_context","text":"","code":"sys_context()"},{"path":"/reference/sys_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"System Context — sys_context","text":"system context evaluating fmt_metric objects.","code":""},{"path":"/reference/unknown_severity_warning.html","id":null,"dir":"Reference","previous_headings":"","what":"Unknown Severity Warning — unknown_severity_warning","title":"Unknown Severity Warning — unknown_severity_warning","text":"Unknown Severity Warning","code":""},{"path":"/reference/unknown_severity_warning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unknown Severity Warning — unknown_severity_warning","text":"","code":"unknown_severity_warning(level, call = sys.call(-1), ...)"},{"path":"/reference/unknown_severity_warning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unknown Severity Warning — unknown_severity_warning","text":"level attempted severity level log dispatch. call function call show condition. ... var args","code":""},{"path":"/reference/unknown_severity_warning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unknown Severity Warning — unknown_severity_warning","text":"error condition","code":""},{"path":"/reference/value.fmt_cls_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_cls_field","title":"Value — value.fmt_cls_field","text":"Generic override getting value enclosing class variable.","code":""},{"path":"/reference/value.fmt_cls_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_cls_field","text":"","code":"# S3 method for fmt_cls_field value(obj, cls_context, ...)"},{"path":"/reference/value.fmt_cls_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_cls_field","text":"obj object extract value . cls_context class scope evaluate . ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_cls_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_cls_field","text":"object's value","code":""},{"path":"/reference/value.fmt_exec_scope.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_exec_scope","title":"Value — value.fmt_exec_scope","text":"Generic override getting value execution scope variable.","code":""},{"path":"/reference/value.fmt_exec_scope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_exec_scope","text":"","code":"# S3 method for fmt_exec_scope value(obj, env_context, ...)"},{"path":"/reference/value.fmt_exec_scope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_exec_scope","text":"obj object extract value . env_context class scope evaluate . ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_exec_scope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_exec_scope","text":"object's value","code":""},{"path":"/reference/value.fmt_level_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_level_info","title":"Value — value.fmt_level_info","text":"Generic override getting value log level information.","code":""},{"path":"/reference/value.fmt_level_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_level_info","text":"","code":"# S3 method for fmt_level_info value(obj, ...)"},{"path":"/reference/value.fmt_level_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_level_info","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_level_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_level_info","text":"object's value","code":""},{"path":"/reference/value.fmt_literal.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_literal","title":"Value — value.fmt_literal","text":"Generic override getting value literal log message.","code":""},{"path":"/reference/value.fmt_literal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_literal","text":"","code":"# S3 method for fmt_literal value(obj, ...)"},{"path":"/reference/value.fmt_literal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_literal","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_literal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_literal","text":"object's value","code":""},{"path":"/reference/value.fmt_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_metric","title":"Value — value.fmt_metric","text":"Generic override getting value system info variable.","code":""},{"path":"/reference/value.fmt_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_metric","text":"","code":"# S3 method for fmt_metric value(obj, sys_context, ...)"},{"path":"/reference/value.fmt_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_metric","text":"obj object extract value . sys_context context evaluate metric. ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_metric","text":"object's value","code":""},{"path":"/reference/value.fmt_newline.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_newline","title":"Value — value.fmt_newline","text":"Generic override getting value new line placeholder.","code":""},{"path":"/reference/value.fmt_newline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_newline","text":"","code":"# S3 method for fmt_newline value(obj, ...)"},{"path":"/reference/value.fmt_newline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_newline","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_newline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_newline","text":"object's value","code":""},{"path":"/reference/value.fmt_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.fmt_timestamp","title":"Value — value.fmt_timestamp","text":"Generic override getting value formatted timestamp.","code":""},{"path":"/reference/value.fmt_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.fmt_timestamp","text":"","code":"# S3 method for fmt_timestamp value(obj, ...)"},{"path":"/reference/value.fmt_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.fmt_timestamp","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/value.fmt_timestamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.fmt_timestamp","text":"object's value","code":""},{"path":"/reference/value.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value","title":"Value — value","text":"Base method getting value format object.","code":""},{"path":"/reference/value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value","text":"","code":"value(obj, ...)"},{"path":"/reference/value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value","text":"object's value","code":""},{"path":"/reference/value.new_fmt_log_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Value — value.new_fmt_log_msg","title":"Value — value.new_fmt_log_msg","text":"Generic override getting value log format message.","code":""},{"path":"/reference/value.new_fmt_log_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value — value.new_fmt_log_msg","text":"","code":"# S3 method for new_fmt_log_msg value(obj, ...)"},{"path":"/reference/value.new_fmt_log_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value — value.new_fmt_log_msg","text":"obj object extract value . ... arguments passed methods.","code":""},{"path":"/reference/value.new_fmt_log_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value — value.new_fmt_log_msg","text":"object's value","code":""}]
